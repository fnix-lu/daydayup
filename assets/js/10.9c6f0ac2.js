(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{363:function(e,n,s){"use strict";s.r(n);var a=s(41),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[e._v("#")]),e._v(" 跨域")]),e._v(" "),s("h2",{attrs:{id:"测试使用的后端-nodejs-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试使用的后端-nodejs-接口"}},[e._v("#")]),e._v(" 测试使用的后端（nodejs）接口")]),e._v(" "),s("p",[e._v("server.js")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var express = require('express');\nvar bodyParser = require('body-parser');\nvar multer = require('multer');\n\nvar app = express();\n\n// app.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\nvar server = app.listen(9091, function () {\n    console.log('Server is running at http://192.168.1.127:9091');\n});\n\nvar userHandler = new (require('./userHandler'));\n\napp.get('/', function (request, response) {\n    response.send('Welcome to this server.');\n});\n\napp.get('/users', function (request, response) {\n    var cb = request.query.cb;\n    var result = userHandler.getAllUsers();\n    response.send(cb + '(' + JSON.stringify(result) + ')'); // jsonp接口返回形式\n});\n\napp.get('/getUserById', function (request, response) {\n    var id = request.query.id;\n    var result = userHandler.getUserById(id);\n    response.send(JSON.stringify(result));\n});\n\napp.post('/getUserById', function (request, response) {\n    var id = request.body.id;\n    var result = userHandler.getUserById(id);\n    response.send(JSON.stringify(result));\n});\n")])])]),s("p",[e._v("userHandler.js")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var data = require('./data');\n\nfunction UserHandler () {\n    this.getAllUsers = function () {\n        var result = {\n            code: -1,\n            users: null\n        };\n\n        if (data.users) {\n            result.code = 200;\n            result.users = data.users;\n        }\n\n        return result;\n    }\n    this.getUserById = function (id) {\n        var result = {\n            code: -1,\n            user: null\n        };\n\n        for (var i = 0; i < data.users.length; i++) {\n            if (data.users[i].id == id) {\n                result.code = 200;\n                result.user = data.users[i];\n                break;\n            }\n        }\n\n        return result;\n    }\n}\n\nmodule.exports = UserHandler;\n")])])]),s("p",[e._v("data.js")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("exports.users = [\n    {\n        id: 1,\n        name: 'Alina',\n        sex: 'female',\n        age: 18,\n        height: 162\n    }, {\n        id: 2,\n        name: 'Bruce',\n        sex: 'male',\n        age: 23,\n        height: 178\n    }, {\n        id: 3,\n        name: 'Cindy',\n        sex: 'female',\n        age: 19,\n        height: 158\n    }, {\n        id: 4,\n        name: 'David',\n        sex: 'male',\n        age: 22,\n        height: 175\n    }, {\n        id: 5,\n        name: 'Edward',\n        sex: 'male',\n        age: 23,\n        height: 178\n    }\n];\n")])])]),s("h2",{attrs:{id:"jsonp-仅支持-get-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-仅支持-get-请求"}},[e._v("#")]),e._v(" JSONP（仅支持 GET 请求）")]),e._v(" "),s("p",[e._v("前端：使用 js 创建 script 标签，src 属性值为 api 地址")]),e._v(" "),s("p",[e._v("后端：接口返回用回调函数包裹数据的 js -> callback(json)")]),e._v(" "),s("p",[e._v("js")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("jsonp('http://192.168.1.127:9090/test/test.json', 'showData', { userName: 'John' });\n\nfunction jsonp (url, callback, data) {\n    var s = document.createElement('script');\n\n    s.src = url + '?cb=' + callback;\n    if (data && typeof data === 'object') {\n        for (var key in data) {\n            s.src += '&' + key + '=' + data[key];\n        }\n    }\n\n    document.getElementsByTagName('head')[0].appendChild(s);\n}\n\nfunction showData (data) {\n    console.log(data);\n}\n")])])]),s("p",[e._v("jquery")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$.ajax({\n    url: 'http://192.168.1.127:9090/test/test.json', // http://192.168.1.127:9090/test/test.json?cb=showData&userName=John\n    type: 'GET',\n    data: {\n        userName: 'John'\n    },\n    dataType: 'jsonp',\n    jsonp: 'cb', // 记录回调函数名的变量名 默认为callback\n    jsonpCallback: 'showData' // 回调函数名 使用success回调则可不写 jquery会随机生成函数名对应success回调\n});\n\nfunction showData (data) {\n    console.log(data);\n}\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$.getJSON('http://192.168.1.127:9090/test/test.json?cb=?', { userName: 'John' }, function (data) {\n    console.log(data);\n});\n")])])]),s("h2",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[e._v("#")]),e._v(" CORS")]),e._v(" "),s("p",[e._v("请求头与响应头")]),e._v(" "),s("p",[e._v("后端：服务端设置 Access-Control-Allow-Origin: * | domain，带 cookie：Access-Control-Allow-Credentials: true")]),e._v(" "),s("p",[e._v("前端带 cookie：xhr.withCredentials = true 读取的为请求接口所在域的 cookie")]),e._v(" "),s("ul",[s("li",[e._v("如果需要当前页 cookie 的写入：1.nginx 反向代理设置 proxy_cookie_domain，2.nodejs 中间件代理中设置 cookieDomainRewrite 参数")])]),e._v(" "),s("h2",{attrs:{id:"nginx-反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理"}},[e._v("#")]),e._v(" nginx 反向代理")]),e._v(" "),s("p",[e._v("原理：同源策略是浏览器的安全策略，不是 HTTP 协议的一部分。服务器端调用 HTTP 接口只是使用 HTTP 协议，不会执行 JS 脚本，不需要同源策略，也就不存在跨越问题")]),e._v(" "),s("p",[e._v("通过 nginx 配置一个代理服务器 proxy，反向代理访问 server 接口，并且可以顺便修改 cookie 中 domain 信息，方便当前域 cookie 写入，实现跨域登录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("server {\n    listen       9093;\n    server_name  http://192.168.1.127;\n\n    # /api/ 匹配 /api/xxx    对应 ^/api/(.*)$\n    # /api  匹配 /apixxx/xxx 对应 ^/api[^/]*/(.*)$\n    location ^~ /api/ {\n        proxy_pass http://192.168.1.127:9091;\n        # proxy_cookie_domain www.domain2.com www.domain1.com;\n        rewrite ^/api/(.*)$ /$1 break;\n\n        add_header Access-Control-Allow-Origin http://192.168.1.127:9090;\n        add_header Access_Control-Allow-Credentials true;\n    }\n}\n")])])]),s("h2",{attrs:{id:"nodejs-中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-中间件"}},[e._v("#")]),e._v(" nodejs 中间件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var express = require('express');\nvar proxy = require('http-proxy-middleware');\nvar app = express();\n\napp.use('/api/', proxy({\n    target: 'http://192.168.1.127:9091',\n    pathRewrite: {\n        '/api/' : '/'\n    },\n    changeOrigin: true,\n    onProxyRes: function (proxyRes, request, response) {\n        response.header('Access-Control-Allow-Origin', 'http://192.168.1.127:9090');\n        response.header('Access-Control-Allow-Credentials', 'true');\n    },\n\n    cookieDomainRewrite: 'www.domain1.com'; // 可以为false，表示不修改\n}));\n\nvar server = app.listen(9092, function (request, response) {\n    console.log('Proxy server is running at http://192.168.1.127:9092');\n});\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);